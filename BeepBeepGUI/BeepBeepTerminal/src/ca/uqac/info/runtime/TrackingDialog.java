/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TrackingDialog.java
 *
 * Created on 9-May-2013, 3:40:47 PM
 */
package ca.uqac.info.runtime;

import ca.uqac.info.monitor.EventNotifierGui;
import ca.uqac.info.util.PipeReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import javax.swing.ButtonModel;

/**
 *
 * @author armand
 */
public class TrackingDialog extends javax.swing.JDialog {

    private EventNotifierGui en;
    private PipeReader pr;
    // In case we open a socket
    ServerSocket m_serverSocket = null;
    Socket m_connection = null;
    /**
     * Return codes
     */
    public static final int ERR_OK = 0;
    public static final int ERR_PARSE = 2;
    public static final int ERR_IO = 3;
    public static final int ERR_ARGUMENTS = 4;
    public static final int ERR_RUNTIME = 6;

    /** Creates new form TrackingDialog */
    public TrackingDialog(java.awt.Frame parent, boolean modal, EventNotifierGui en) {
        super(parent, modal);
        this.en = en;
        this.pr = null;
        initComponents();
        this.fileRB.setActionCommand("File");
        this.pipeRB.setActionCommand("Pipe");
        this.tcpRB.setActionCommand("TCP");
        this.stdinRB.setActionCommand("Stdin");
    }

    PipeReader showDialog() {
        this.setVisible(true);
        return this.pr;

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        pipeRB = new javax.swing.JRadioButton();
        fileRB = new javax.swing.JRadioButton();
        tcpRB = new javax.swing.JRadioButton();
        stdinRB = new javax.swing.JRadioButton();
        pipeTextField = new javax.swing.JTextField();
        fileTextField = new javax.swing.JTextField();
        tcpTextField = new javax.swing.JTextField();
        trackButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Track source");

        buttonGroup1.add(pipeRB);
        pipeRB.setText("Pipe");

        buttonGroup1.add(fileRB);
        fileRB.setText("File");

        buttonGroup1.add(tcpRB);
        tcpRB.setText("TCP");

        buttonGroup1.add(stdinRB);
        stdinRB.setSelected(true);
        stdinRB.setText("Stdin");

        pipeTextField.setText("/home/armand/workspace/tmp/beeppipe.pipe");

        fileTextField.setText("/home/armand/workspace/tmp/beeppipe.xml");

        tcpTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        trackButton.setText("Start tracking");
        trackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fileRB)
                            .addComponent(pipeRB))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fileTextField)
                            .addComponent(pipeTextField)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tcpRB)
                        .addGap(13, 13, 13)
                        .addComponent(tcpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(stdinRB))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(306, Short.MAX_VALUE)
                .addComponent(trackButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pipeRB)
                    .addComponent(pipeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileRB)
                    .addComponent(fileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tcpRB)
                    .addComponent(tcpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stdinRB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(trackButton))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void trackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trackButtonActionPerformed
        try {
            String selected = this.buttonGroup1.getSelection().getActionCommand();
            if (selected.equals("Pipe")) {
                File f = new File(this.pipeTextField.getText());
                this.pr = new PipeReader(new FileInputStream(f), this.en, false);
            } else if (selected.equals("File")) {
                File f = new File(this.fileTextField.getText());
                this.pr = new PipeReader(new FileInputStream(f), this.en, true);
            } else if (selected.equals("TCP")) {
                int tcp_port = Integer.parseInt(this.tcpTextField.getText());
                if (tcp_port > 0) {
                    m_serverSocket = new ServerSocket(tcp_port);
                    m_connection = m_serverSocket.accept();
                    this.pr = new PipeReader(m_connection.getInputStream(), this.en, false);
                }
            } else if (selected.equals("Stdin")) {
                this.pr = new PipeReader(System.in, this.en, false);
            }
        } catch (FileNotFoundException ex) {
            // We print both trace and pipe since one of them must be empty
            //System.err.println("ERROR: file not found " + trace_filename + pipe_filename);
            System.exit(ERR_IO);
        } catch (IOException e) {
            // Caused by socket error
            e.printStackTrace();
            System.exit(ERR_IO);
        }
        if (this.pr != null) {
            pr.setSeparator("<" + en.event_name + ">", "</" + en.event_name + ">");
            setVisible(false);
            dispose();
        }
    }//GEN-LAST:event_trackButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton fileRB;
    private javax.swing.JTextField fileTextField;
    private javax.swing.JRadioButton pipeRB;
    private javax.swing.JTextField pipeTextField;
    private javax.swing.JRadioButton stdinRB;
    private javax.swing.JRadioButton tcpRB;
    private javax.swing.JTextField tcpTextField;
    private javax.swing.JButton trackButton;
    // End of variables declaration//GEN-END:variables
}
